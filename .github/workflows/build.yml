name: build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-rust:
    strategy:
      matrix:
        platform: [windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Rust
        run: rustup toolchain install stable --component llvm-tools-preview
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: install nextest
        uses: taiki-e/install-action@nextest
      - uses: Swatinem/rust-cache@v1
      - name: Install Protoc
        uses: arduino/setup-protoc@v2
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Setup pnpm
        uses: pnpm/action-setup@v2.4.0
        with:
          version: latest
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      - name: Install dependencies
        run: pnpm install
      - name: Build web
        run: pnpm build
      - name: Check code format
        run: |
          cd src-tauri
          cargo fmt -- --check
      - name: Lint rust sources
        run: |
          cd src-tauri
          cargo clippy --all-targets --all-features --tests --benches -- -D warnings
